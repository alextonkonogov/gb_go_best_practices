//В качестве завершающего задания нужно выполнить программу поиска дубликатов файлов.
//Дубликаты файлов - это файлы, которые совпадают по имени файла и по его размеру.
//Нужно написать консольную программу, которая проверяет наличие дублирующихся файлов.
//Программа должна работать на локальном компьютере и получать на вход путь до директории.
//Программа должна вывести в стандартный поток вывода список дублирующихся файлов,
//которые находятся как в директории, так и в поддиректориях директории, переданной через аргумент командной строки.
//Данная функция должна работать эффективно при помощи распараллеливания программы
//Программа должна принимать дополнительный ключ - возможность удаления обнаруженных дубликатов файлов после поиска.
//Дополнительно нужно придумать, как обезопасить пользователей от случайного удаления файлов.
//В качестве ключей желательно придерживаться общепринятых практик по использованию командных опций.
//
//Критерии приемки программы:
//
//Программа компилируется
//Программа выполняет функциональность, описанную выше.
//Программа покрыта тестами
//Программа содержит документацию и примеры использования
//Программа обладает флагом “-h/--help” для краткого объяснения функциональности
//Программа должна уведомлять пользователя об ошибках, возникающих во время выполнения

package main

import (
	"log"

	"github.com/alextonkonogov/gb_go_best_practices/homework2/config"
	f "github.com/alextonkonogov/gb_go_best_practices/homework2/files"
	p "github.com/alextonkonogov/gb_go_best_practices/homework2/program"
)

func main() {
	cnfg, err := config.NewAppConfig()
	if err != nil {
		log.Fatal(err)
	}
	uniqueFiles := f.NewUniqueFilesMap()

	program := p.NewProgram(cnfg, uniqueFiles)
	err = program.Start()
	if err != nil {
		log.Fatal(err)
	}
}
